let activeUsers = {};

const socketHandler = (io) => {
  io.on('connection', (socket) => {
    console.log('üîå User connected:', socket.id);

    // ÿπŸÜÿØ ÿßŸÜÿ∂ŸÖÿßŸÖ ŸÖÿ≥ÿ™ÿÆÿØŸÖ ÿ•ŸÑŸâ ÿ∫ÿ±ŸÅÿ©
    socket.on('joinRoom', ({ roomId, userId }) => {
      socket.join(roomId);
      activeUsers[socket.id] = { userId, roomId };
      io.to(roomId).emit('userJoined', { userId });
    });

    // ÿ•ÿ±ÿ≥ÿßŸÑ ÿ±ÿ≥ÿßŸÑÿ© ŸÅŸä ÿßŸÑÿØÿ±ÿØÿ¥ÿ©
    socket.on('sendMessage', ({ roomId, message, sender }) => {
      io.to(roomId).emit('newMessage', { message, sender });
    });

    // ÿµÿπŸàÿØ ŸÖÿßŸäŸÉ
    socket.on('requestMic', ({ roomId, userId }) => {
      io.to(roomId).emit('micRequested', { userId });
    });

    // ŸÉÿ™ŸÖ ÿßŸÑŸÖÿßŸäŸÉ
    socket.on('muteAll', ({ roomId }) => {
      io.to(roomId).emit('muteEveryone');
    });

    // ÿ∑ÿ±ÿØ ŸÖÿ≥ÿ™ÿÆÿØŸÖ
    socket.on('kickUser', ({ roomId, userId }) => {
      io.to(roomId).emit('userKicked', { userId });
    });

    // ÿπŸÜÿØ ŸÅÿµŸÑ ÿßŸÑÿßÿ™ÿµÿßŸÑ
    socket.on('disconnect', () => {
      const user = activeUsers[socket.id];
      if (user) {
        io.to(user.roomId).emit('userLeft', { userId: user.userId });
        delete activeUsers[socket.id];
      }
      console.log('‚ùå User disconnected:', socket.id);
    });
  });
};

module.exports = socketHandler;
